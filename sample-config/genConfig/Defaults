# Generic network device sub-tree defaults
# Use with genDevConfig and Shinken SnmpBooster module
#
# This file is indetented using 4 space.
#
###############################################################################
#
# Setup the default variables that apply to all services that are defined
# within this part of the configuration file hierarchy.
#
# All variables can be overriden by a template loaded later in the process.
#
# Datasources define the type of data, the period, scaling and limits
#
###############################################################################

# DATASOURCES for most MIB-II devices

[DATASOURCE]
    # Default values that are used if undefined in each DATASOURCE
    ds_type      = DERIVE
    ds_min       = 0

    # Define the OIDs that will form the DATASOURCES
    
    # MIB2
    OidsysUptime =                           1.3.6.1.2.1.1.3.0
    OidifNumber =                            1.3.6.1.2.1.2.1.0
    OidifIndex =                             1.3.6.1.2.1.2.2.1.1
    OidifDescr =                             1.3.6.1.2.1.2.2.1.2
    OidifType =                              1.3.6.1.2.1.2.2.1.3
    OidifMtu =                               1.3.6.1.2.1.2.2.1.4
    OidifSpeed =                             1.3.6.1.2.1.2.2.1.5
    OidifPhysAddress =                       1.3.6.1.2.1.2.2.1.6
    OidifAdminStatus =                       1.3.6.1.2.1.2.2.1.7
    OidifOperStatus =                        1.3.6.1.2.1.2.2.1.8
    OidifLastChange =                        1.3.6.1.2.1.2.2.1.9
    OidifInOctets =                          1.3.6.1.2.1.2.2.1.10
    OidifInUcastPkts =                       1.3.6.1.2.1.2.2.1.11
    OidifInNUcastPkts =                      1.3.6.1.2.1.2.2.1.12
    OidifInDiscards =                        1.3.6.1.2.1.2.2.1.13
    OidifInErrors =                          1.3.6.1.2.1.2.2.1.14
    OidifInUnknownProtos =                   1.3.6.1.2.1.2.2.1.15
    OidifOutOctets =                         1.3.6.1.2.1.2.2.1.16
    OidifOutUcastPkts =                      1.3.6.1.2.1.2.2.1.17
    OidifOutNUcastPkts =                     1.3.6.1.2.1.2.2.1.18
    OidifOutDiscards =                       1.3.6.1.2.1.2.2.1.19
    OidifOutErrors =                         1.3.6.1.2.1.2.2.1.20
    OidifOutQLen =                           1.3.6.1.2.1.2.2.1.21
    OidifHCInOctets =                        1.3.6.1.2.1.31.1.1.1.6
    OidifHCInUcastPkts =                     1.3.6.1.2.1.31.1.1.1.7
    OidifHCInMulticastPkts =                 1.3.6.1.2.1.31.1.1.1.8
    OidifHCInBroadcastPkts =                 1.3.6.1.2.1.31.1.1.1.9
    OidifHCOutOctets =                       1.3.6.1.2.1.31.1.1.1.10
    OidifHCOutUcastPkts =                    1.3.6.1.2.1.31.1.1.1.11
    OidifHCOutMulticastPkts =                1.3.6.1.2.1.31.1.1.1.12
    OidifHCOutBroadcastPkts =                1.3.6.1.2.1.31.1.1.1.13
    OidifAlias =                             1.3.6.1.2.1.31.1.1.1.18
    OidipOutRequests =                       1.3.6.1.2.1.4.10.0
    OidipForwDatagrams =                     1.3.6.1.2.1.4.6.0

    # These are from the MIB2 ifmib.

    OidifName =                              1.3.6.1.2.1.31.1.1.1.1

    # OIDs for Etherlike MIB devices

    Oiddot3StatsAlignmentErrors =            1.3.6.1.2.1.10.7.2.1.2
    Oiddot3StatsFCSErrors =                  1.3.6.1.2.1.10.7.2.1.3
    Oiddot3StatsSingleCollisionFrames =      1.3.6.1.2.1.10.7.2.1.4
    OidOiddot3StatsMultipleCollisionFrames =    1.3.6.1.2.1.10.7.2.1.5
    Oiddot3StatsDeferredTransmissions =      1.3.6.1.2.1.10.7.2.1.7
    Oiddot3StatsLateCollisions =             1.3.6.1.2.1.10.7.2.1.8
    Oiddot3StatsExcessiveCollisions =        1.3.6.1.2.1.10.7.2.1.9
    Oiddot3StatsCarrierSenseErrors =         1.3.6.1.2.1.10.7.2.1.11
    Oiddot3StatsFrameTooLongs =              1.3.6.1.2.1.10.7.2.1.13
    Oiddot3StatsDuplexStatus =               1.3.6.1.2.1.10.7.2.1.19

    # T1 Controller OIDS from RFC1406
    # The number of Errored Seconds
    Oiddsx1CurrentESs =                      1.3.6.1.2.1.10.18.7.1.2
    # The number of Severely Errored Seconds
    Oiddsx1CurrentSESs =                     1.3.6.1.2.1.10.18.7.1.3
    # The number of Severely Errored Framing Seconds
    Oiddsx1CurrentSEFSs =                    1.3.6.1.2.1.10.18.7.1.4
    # The number of Unavailable Seconds
    Oiddsx1CurrentUASs =                     1.3.6.1.2.1.10.18.7.1.5
    # The number of Controlled Slip Seconds
    Oiddsx1CurrentCSSs =                     1.3.6.1.2.1.10.18.7.1.6
    # The number of Path Coding Violations
    Oiddsx1CurrentPCVs =                     1.3.6.1.2.1.10.18.7.1.7
    # The number of Line Errored Seconds
    Oiddsx1CurrentLESs =                     1.3.6.1.2.1.10.18.7.1.8
    # The number of Bursty Errored Seconds
    Oiddsx1CurrentBESs =                     1.3.6.1.2.1.10.18.7.1.9
    # The number of Degraded Minutes
    Oiddsx1CurrentDMs =                      1.3.6.1.2.1.10.18.7.1.10
    # The number of Line Code Violations
    Oiddsx1CurrentLCVs =                     1.3.6.1.2.1.10.18.7.1.11



###############################################################################
#
# Datasources define the type of data and the period of the data retrieved
#
###############################################################################

    [[FileSize]]
        ds_type = GAUGE
        ds_unit = KB
        ds_oid  = $OidFileSize.%(instance)s
    [[sysContact]]
        ds_type = TEXT
        ds_oid  = $OidSysContact.0
    [[sysName]]
        ds_type = TEXT
        ds_oid  = $OidSysName.0
    [[sysDescr]]
        ds_type = TEXT
        ds_oid  = $OidSysDescr.0
    [[IfAdminStatus]]
        ds_type = GAUGE
        ds_oid  = $OidIfAdminStatus.%(instance)s
    [[IfOperStatus]]
        ds_type = GAUGE
        ds_oid  = $OidIfOperStatus.%(instance)s
    [[ifInOctets]]
        ds_name = in
        ds_unit = Kbps
        ds_calc = 8,mul,1000,div
        # in=252352.4Kbps;;;0;100000
        ds_oid = $OidifInOctets.%(instance)s

    [[ifOutOctets]]
        ds_name = out
        ds_unit = Kbps
        ds_calc = 8,mul,1000,div
        # out=252352.4Kbps;;;0;100000
        ds_oid = $OidifOutOctets.%(instance)s

    [[ipForwDatagrams]]
        ds_oid = $OidipForwDatagrams
    [[ipOutRequests]]
        ds_oid = $OidipOutRequests


    [[dot3StatsAlignmentErrors]]
        ds_oid = $Oiddot3StatsAlignmentErrors.%(instance)s
    [[dot3StatsFCSErrors]]
        ds_oid = $Oiddot3StatsFCSErrors.%(instance)s
    [[dot3StatsSingleCollisionFrames]]
        ds_oid = $Oiddot3StatsSingleCollisionFrames.%(instance)s
    [[dot3StatsMultipleCollisionFrames]]
        ds_oid = $Oiddot3StatsMultipleCollisionFrames.%(instance)s
    [[dot3StatsDeferredTransmissions]]
        ds_oid = $Oiddot3StatsDeferredTransmissions.%(instance)s
    [[dot3StatsLateCollisions]]
        ds_oid = $Oiddot3StatsLateCollisions.%(instance)s
    [[dot3StatsExcessiveCollisions]]
        ds_oid = $Oiddot3StatsExcessiveCollisions.%(instance)s
    [[dot3StatsCarrierSenseErrors]]
        ds_oid = $Oiddot3StatsCarrierSenseErrors.%(instance)s
    [[dot3StatsFrameTooLongs]]
        ds_oid = $Oiddot3StatsFrameTooLongs.%(instance)s
    
    [[ifInErrors]]
        ds_oid = $OidifInErrors.%(instance)s
    [[ifOutErrors]]
        ds_oid = $OidifOutErrors.%(instance)s
    [[ifInUcastPackets]]
        ds_oid = $OidifInUcastPkts.%(instance)s
    [[ifOutUcastPackets]]
        ds_oid = $OidifOutUcastPkts.%(instance)s
    [[ifInNUcastPackets]]
        ds_oid = $OidifInNUcastPkts.%(instance)s
    [[ifOutNUcastPackets]]
        ds_oid = $OidifOutNUcastPkts.%(instance)s
    [[ifInDiscards]]
        ds_oid = $OidifInDiscards.%(instance)s
    [[ifOutDiscards]]
        ds_oid = $OidifOutDiscards.%(instance)s
    [[ifOutQLen]]
        ds_oid = $OidifOutQLen.%inst
    
    # High capacity counters. These require SNMPv2.
    
    [[ifHCInOctets]]
        ds_name = in
        ds_unit = Mbps
        ds_calc = 8,mul,1000000,div
        ds_type = DERIVE64
        ds_oid = $OidifHCInOctets.%(instance)s
    [[ifHCInUcastPkts]]
        ds_type = DERIVE64
        ds_oid = $OidifHCInUcastPkts.%(instance)s
    [[ifHCInMulticastPkts]]
        ds_type = DERIVE64
        ds_oid = $OidifHCInMulticastPkts.%(instance)s
    [[ifHCInBroadcastPkts]]
        ds_type = DERIVE64
        ds_oid = $OidifHCInBroadcastPkts.%(instance)s
    
    
    [[ifHCOutOctets]]
        ds_max = $OidifSpeed
        ds_name = out
        ds_unit = Mbps
        ds_calc = 8,mul,1000000,div
        ds_type = DERIVE64
        ds_oid = $OidifHCOutOctets.%(instance)s
    [[ifHCOutUcastPkts]]
        ds_type = DERIVE64
        ds_oid = $OidifHCOutUcastPkts.%(instance)s
    [[ifHCOutMulticastPkts]]
        ds_type = DERIVE64
        ds_oid = $OidifHCOutMulticastPkts.%(instance)s
    [[ifHCOutBroadcastPkts]]
        ds_type = DERIVE64
        ds_oid = $OidifHCOutBroadcastPkts.%(instance)s
    
    # Datasources for T1 controllers
    [[dsx1CurrentESs]]
        ds_oid = $Oiddsx1CurrentESs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentSESs]]
        ds_oid = $Oiddsx1CurrentSESs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentSEFSs]]
        ds_oid = $Oiddsx1CurrentSEFSs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentUASs]]
        ds_oid = $Oiddsx1CurrentUASs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentCSSs]]
        ds_oid = $Oiddsx1CurrentCSSs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentPCVs]]
        ds_oid = $Oiddsx1CurrentPCVs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentLESs]]
        ds_oid = $Oiddsx1CurrentLESs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentBESs]]
        ds_oid = $Oiddsx1CurrentBESs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentDMs]]
        ds_oid = $Oiddsx1CurrentDMs.%(instance)s
        ds_type = GAUGE
    [[dsx1CurrentLCVs]]
        ds_oid = $Oiddsx1CurrentLCVs.%(instance)s
        ds_type = GAUGE

###############################################################################
#
# DSTEMPLATE are definitions that will tell the collection engine what to retrieve
# from the device, and how they should be displayed. Each service that is defined
# in a Shinken configuration file should be associated with a DSTEMPLATE.
#
# DSTEMPLATE is optional in the target definition as you may not want to pull
# data for it. Examples are Chassis's of devices for which the OIDs
# haven't been detailed yet(temperature, cpu, memory). 
#
###############################################################################


[DSTEMPLATE]
    # Default values inherited by all device definitions
    ds = ""
    graph = ""

    [[Device-Traffic]]
        ds = ipForwDatagrams,ipOutRequests
        graph = "traffic: ipForwDatagrams ipOutRequests"
    
    # Generic Device
    
    [[Generic-Device]]
    
    ### Interface target types.
    
    [[standard-interface]]
        ds          = 	"""ifInOctets, ifOutOctets, ifInErrors,
        ifOutErrors, ifInUcastPackets, ifOutUcastPackets"""
        graph        = 	"""Octets: ifInOctets ifOutOctets,
        UcastPackets: ifInUcastPackets ifOutUcastPackets,
        Errors: ifInErrors ifOutErrors"""
    
    [[extended-interface]]
        ds          = 	"""ifInOctets, ifOutOctets, ifInErrors,
        ifOutErrors, ifInUcastPackets, ifOutUcastPackets,
        dot3statsAlignmentErrors, dot3statsFCSErrors,
        dot3statsCarrierSenseErrors,dot3statsFramesTooLong,
        dot3StatsSingleCollisionFrames,dot3StatsMultipleCollisionFrames,
        dot3statsDeferredTransmissions,
        ifInDiscards, ifOutDiscards,
        ifOutQLen"""
        graph        = 	"""Octets: ifInOctets ifOutOctets,
        UcastPackets: ifInUcastPackets ifOutUcastPackets,
        Collisions: dot3StatsSingleCollisionFrames dot3StatsMultipleCollisionFrames
        QueueLen: ifOutQLen,
        Errors: ifInErrors ifOutErrors ifInDiscards ifOutDiscards,
        Error Details: dot3statsAlignmentErrors dot3statsFCSErrors
        dot3statsFramesTooLong dot3statsCarrierSenseErrors
        dot3statsDeferredTransmissions"""
    [[extended-interface-nu]]
        ds          = 	"""ifInOctets, ifOutOctets, ifInErrors,
        ifOutErrors, ifInUcastPackets, ifOutUcastPackets,
        ifInNUcastPackets, ifOutNUcastPackets,
        dot3statsAlignmentErrors, dot3statsFCSErrors,
        dot3statsCarrierSenseErrors,dot3statsFramesTooLong,
        dot3StatsSingleCollisionFrames,dot3StatsMultipleCollisionFrames,
        dot3statsDeferredTransmissions,
        ifInDiscards, ifOutDiscards,
        ifOutQLen"""
        graph        = 	"""Octets: ifInOctets ifOutOctets,
        UcastPackets: ifInUcastPackets ifOutUcastPackets,
        NUcastPackets: ifInNUcastPackets ifOutNUcastPackets,
        Collisions: dot3StatsSingleCollisionFrames dot3StatsMultipleCollisionFrames
        QueueLen: ifOutQLen,
        Errors: ifInErrors ifOutErrors ifInDiscards ifOutDiscards,
        Error Details: dot3statsAlignmentErrors dot3statsFCSErrors
        dot3statsFramesTooLong dot3statsCarrierSenseErrors
        dot3statsDeferredTransmissions"""
    
    [[extended-interface-hc]]
        ds          = 	"""ifHCInOctets, ifHCOutOctets, ifInErrors,
        ifOutErrors, ifHCInUcastPackets, ifHCOutUcastPackets,
        dot3statsAlignmentErrors, dot3statsFCSErrors,
        dot3statsCarrierSenseErrors,dot3statsFramesTooLong,
        dot3StatsSingleCollisionFrames,dot3StatsMultipleCollisionFrames,
        dot3statsDeferredTransmissions,
        ifInDiscards, ifOutDiscards,
        ifOutQLen"""
        graph        = 	"""Octets: ifHCInOctets ifHCOutOctets,
        UcastPackets: ifHCInUcastPackets ifHCOutUcastPackets,
        Collisions: dot3StatsSingleCollisionFrames dot3StatsMultipleCollisionFrames
        QueueLen: ifOutQLen,
        Errors: ifInErrors ifOutErrors
        Error Details: dot3statsAlignmentErrors dot3statsFCSErrors
        dot3statsFramesTooLong dot3statsCarrierSenseErrors
        dot3statsDeferredTransmissions"""
    
    [[extended-interface-nu-hc]]
        ds          = 	"""ifHCInOctets, ifHCOutOctets, ifInErrors,
        ifOutErrors, ifHCInUcastPackets, ifHCOutUcastPackets,
        ifHCInNUcastPackets, ifHCOutNUcastPackets,
        dot3statsAlignmentErrors, dot3statsFCSErrors,
        dot3statsCarrierSenseErrors,dot3statsFramesTooLong,
        dot3StatsSingleCollisionFrames,dot3StatsMultipleCollisionFrames,
        dot3statsDeferredTransmissions,
        ifInDiscards, ifOutDiscards,
        ifOutQLen"""
        graph        = 	"""Octets: ifHCInOctets ifHCOutOctets,
        UcastPackets: ifHCInUcastPackets ifHCOutUcastPackets,
        NUcastPackets: ifHCInNUcastPackets ifHCOutNUcastPackets,
        Collisions: dot3StatsSingleCollisionFrames
        dot3StatsMultipleCollisionFrames
        QueueLen: ifOutQLen,
        Errors: ifInErrors ifOutErrors ifInDiscards ifOutDiscards,
        Errors Details: dot3statsAlignmentErrors dot3statsFCSErrors
        dot3statsFramesTooLong dot3statsCarrierSenseErrors
        dot3statsDeferredTransmissions"""
    
    [[standard-interface-nu]]
        ds          = 	"""ifInOctets, ifOutOctets, ifInErrors,
        ifOutErrors, ifInUcastPackets, ifOutUcastPackets,
        ifInNUcastPackets, ifOutNUcastPackets"""
        graph        = 	"""Octets: ifInOctets ifOutOctets,
        UcastPackets: ifInUcastPackets ifOutUcastPackets,
        NUcastPackets: ifInNUcastPackets ifOutNUcastPackets,
        Errors: ifInErrors ifOutErrors"""
    
    [[standard-interface-hc]]
        ds          = 	"""ifHCInOctets, ifHCOutOctets, ifInErrors,
        ifOutErrors, ifHCInUcastPkts, ifHCOutUcastPkts"""
        graph        = 	"""Octets: ifHCInOctets ifHCOutOctets,
        UcastPackets: ifHCInUcastPackets ifHCOutUcastPackets,
        Errors: ifInErrors ifOutErrors"""
    
    [[standard-interface-nu-hc]]
        ds          = 	"""ifHCInOctets, ifHCOutOctets, ifInErrors,
        ifOutErrors, ifHCInUcastPkts, ifHCOutUcastPkts,
        ifHCInMulticastPkts, ifHCInMulticastPkts,
        ifHCInBroadcastPkts, ifHCInBroadcastPkts"""
        graph        = 	"""Octets: ifHCInOctets ifHCOutOctets,
        UcastPackets: ifHCInUcastPackets ifHCOutUcastPackets,
        McastPackets: ifHCInMulticastPackets ifHCOutMulticastPackets,
        BcastPackets: ifHCInBroadcastPackets ifHCOutBroadcastPackets,
        Errors: ifInErrors ifOutErrors"""
    
    [[sub-interface]]
        ds = "ifInOctets, ifOutOctets"
        graph = "Octets: ifInOctets ifOutOctets"
    
    [[sub-interface-hc]]
        ds = "ifHCInOctets, ifHCOutOctets"
        graph = "Octets: ifHCInOctets ifHCOutOctets"
    
    [[dsx-controller]]
        ds          = 	"""dsx1CurrentESs, dsx1CurrentSESs, dsx1CurrentSEFSs,
        dsx1CurrentUASs, dsx1CurrentCSSs, dsx1CurrentPCVs,
        dsx1CurrentLESs, dsx1CurrentBESs, dsx1CurrentDMs, dsx1CurrentLCVs"""
        graph        = 	"""Errors: dsx1CurrentPCVs dsx1CurrentLCVs,
        Line: dsx1CurrentLCVs dsx1CurrentLESs,
        ErroredSec: dsx1CurrentESs dsx1CurrentSESs dsx1CurrentSEFSs
        dsx1CurrentCSSs dsx1CurrentBESs,
        Service: dsx1CurrentUASs dsx1CurrentDMs"""


###############################################################################
#
## TRIGGER definitions
#
# The trigger dictionnary defines expressions to be applied on retrieved values.
# They are referenced using the trigger variable in the Shinken configuration.
# Note the use of underscore for the Shinken configuration
# and - for the trigger-name in the Defaults file.
#
# Triggers that do not resolve correctly or contain errors will return
# unknown status and log an error message in the plugin output.
#
# For examples see: genConfig.triggers
#
###############################################################################

#[TRIGGER]
    # Set service to UNKNOWN(3) by default
    #   default_status = 3
    #[[trigger_name1]]
    #    warning =  datasource.function(), <constant>, <operator>
    #    critical = datasource.function(), datasource.function(), <operator>
    #    critical = datasource.function(), <constant>, <operator>, <constant>, <operator>
    
    #[TRIGGERGROUP]
    #   trigger_group_name1 = trigger_name1, trigger_name2


###############################################################################
#
# MAP definitions dynamically find the SNMP instance
#
# REGULAR EXPRESSION MATCHES ARE NOT SUPPORTED AT THIS TIME
# They are documented in case they are implemented later on.
# The instance must fully match as passed in the check arguments
#
###############################################################################


[MAP]
[[interface-name]]
    base_oid = .1.3.6.1.2.1.2.2.1.2
#    base_oid = ifDescr


###############################################################################
#
# "graph" statements define how the data should be displayed in the graphic.
# Most of the variables defined are directly mapped to the rrdtool graph tool
# that is used to generate the graphics.
#
#
###############################################################################

# Interfaces

[GRAPH]
[[ifInOctets]]
    color = dark-green
    draw-as = AREA
    legend = "Average bits in"
    y-axis = "bits per second"
    units = "bits/sec"
    y-min = 0
    scale = 8,*
# bytes = true
    show-max = true
    max-color = neongrn
    draw-max-as = LINE1

[[ifOutOctets]]
    color = blue
    legend = "Average bits out"
    y-axis = "bits per second"
    units = "bits/sec"
    y-min = 0
    scale = 8,*
# bytes = true
    show-max = true
    max-color = skyblue
    draw-max-as = LINE1


[[ifInUcastPackets]]
    color = dark-green
    draw-as = AREA
    y-axis = "packets per second"
    units = "pkt/sec"
    legend = "Average num packets in"
    show-max = true
    max-color = neongrn
    draw-max-as = LINE1
 
[[ifOutUcastPackets]]
    color = blue
    y-axis = "packets per second"
    units = "pkt/sec"
    legend = "Average num packets out"
    show-max = true
    max-color = skyblue
    draw-max-as = LINE1

[[ifInNUcastPackets]]
    color = dark-green
    draw-as = AREA
    y-axis = "packets per second"
    units = "pkt/sec"
    legend = "Average num packets in"
    show-max = true
    max-color = neongrn
    draw-max-as = LINE1
 
[[ifOutNUcastPackets]]
    color = blue
    y-axis = "packets per second"
    units = "pkt/sec"
    legend = "Average num packets out"
    show-max = true
    max-color = skyblue
    draw-max-as = LINE1
 
[[ifInErrors]]
    color = dark-green
    draw-as = AREA
    y-axis = "errors per second"
    units = "err/sec"
    legend = "Average errors in"

[[ifOutErrors]]
    color = blue
    y-axis = "errors per second"
    legend = "Average errors out"
    units = "err/sec"

[[ifInDiscards]]
    color = green
    legend = "Average discards in"
    units = "pkt/sec"

[[ifOutDiscards]]
    color = purple
    legend = "Average discards out"
    units = "pkt/sec"

[[ifOutQLen]]
    color = dark-green
    draw-as = AREA
    y-axis = "output queue length"
    legend = "Output packet queue length"
    units = "packets"
    show-max = true
    max-color = neongrn
    draw-max-as = LINE1

[[ifHCInOctets]]
    color = dark-green
    draw-as = AREA
    legend = "Average bits in"
    y-axis = "bits per second"
    units = "bits/sec"
    scale = 8,*
    y-min = 0
# bytes = true
    show-max = true
    max-color = neongrn
    draw-max-as = LINE1
 
[[ifHCOutOctets]]
    color = blue
    legend = "Average bits out"
    y-axis = "bits per second"
    units = "bits/sec"
    scale = 8,*
    y-min = 0
# bytes = true
    show-max = true
    max-color = skyblue
    draw-max-as = LINE1

[[ifHCInUcastPackets]]
    color = dark-green
    draw-as = AREA
    y-axis = "packets per second"
    units = "pkt/sec"
    legend = "Average num packets in"
    show-max = true
    max-color = neongrn
    draw-max-as = LINE1
 
[[ifHCOutUcastPackets]]
    color = blue
    y-axis = "packets per second"
    units = "pkt/sec"
    legend = "Average num packets out"
    show-max = true
    max-color = skyblue
    draw-max-as = LINE1

[[ifHCInBroadcastPackets]]
    color = dark-green
    draw-as = AREA
    y-axis = "packets per second"
    units = "pkt/sec"
    legend = "Average num packets in"
    show-max = true
    max-color = neongrn
    draw-max-as = LINE1
 
[[ifHCOutBroadcastPackets]]
    color = blue
    y-axis = "packets per second"
    units = "pkt/sec"
    legend = "Average num packets out"
    show-max = true
    max-color = skyblue
    draw-max-as = LINE1

[[ifHCInMulticastPackets]]
    color = dark-green
    draw-as = AREA
    y-axis = "packets per second"
    units = "pkt/sec"
    legend = "Average num packets in"
    show-max = true
    max-color = neongrn
    draw-max-as = LINE1
 
[[ifHCOutMulticastPackets]]
    color = blue
    y-axis = "packets per second"
    units = "pkt/sec"
    legend = "Average num packets out"
    show-max = true
    max-color = skyblue
    draw-max-as = LINE1

[[ipForwDatagrams]]
    color = dark-green
    y-axis = "Packets per second"
    legend = "Packet traffic forwarded by device"
    units = "packets/sec"
    draw-as = AREA
    show-max = true
    max-color = neongrn
    draw-max-as = LINE2

[[ipOutRequests]]
    color = blue
    y-axis = "Packets per second"
    legend = "Packet traffic generated by device"
    units = "packets/sec"
    draw-as = STACK

###
### Ethernet Errors stacked
###

[[dot3statsAlignmentErrors]]
    y-axis = "errors per 5 minute"
    legend = "Frame alignment errors"
    scale = 300,*
    units = "errors"
    draw-as = AREA

[[dot3statsFCSErrors]]
    y-axis = "errors per 5 minute"
    legend = "FCS errors"
    scale = 300,*
    units = "errors"
    draw-as = STACK

[[dot3statsFramesTooLong]]
    y-axis = "errors per 5 minute"
    legend = "Frames too long"
    scale = 300,*
    units = "errors"
    draw-as = STACK

[[dot3statsCarrierSenseErrors]]
    y-axis = "errors per 5 minute"
    legend = "Carrier sense errors"
    scale = 300,*
    units = "errors"
    draw-as = STACK

[[dot3statsDeferredTransmissions]]
    y-axis = "errors per 5 minute"
    legend = "Deferred transmissions"
    scale = 300,*
    units = "errors"
    draw-as = STACK

[[ifInDiscards]]
    legend = "Average discards in"
    units = "pkt/sec"

[[ifOutDiscards]]
    legend = "Average discards out"
    units = "pkt/sec"

###
### Collision graph Stacked
###
[[dot3statsSingleCollFrames]]
    y-axis = "errors per 5 minute"
    legend = "Single collision frames"
    scale = 300,*
    units = "collsions"
    draw-as = AREA

[[dot3statsMultipleCollFrames]]
    y-axis = "errors per 5 minute"
    legend = "Multiple collision frames"
    scale = 300,*
    units = "align errors"
    draw-as = STACK

[[dot3statsLateCollisions]]
    y-axis = "errors per 5 minute"
    legend = "Late collisions"
    scale = 300,*
    units = "collsions"
    draw-as = STACK

[[dot3statsExcessiveCollisions]]
    y-axis = "errors per 5 minute"
    legend = "Excessive collisions"
    scale = 300,*
    units = "collisions"
    draw-as = STACK

###
### Internal Errors
###
[[dot3statsInternalMacTransmitErrors]]
    y-axis = "errors per 5 minute"
    color = dark-red
    scale = 300,*
    draw-as = AREA
    units = "errors"

[[dot3statsInternalMacReceiveErrors]]
    y-axis = "errors per 5 minute"
    color = dark-green
    scale = 300,*
    units = "errors"

[[dot3StatsDuplexStatus]]
    units = ""
    color = dark-green
    draw-as = AREA
    y-axis = "duplex status"
    y-min = 0
    y-max = 3
    legend = "Duplex status:<br><ul><li>(1) unknown<li>(2) half<li>(3) full</ul>"

[[dsx1CurrentESs]]
    color = red
    y-axis = "#sec/15min"
    units = "sec"
    legend = "The number of Errored Seconds"
[[dsx1CurrentSESs]]
    color = green
    y-axis = "#sec/15min"
    units = "sec"
    legend = "The number of Severely Errored Seconds"
[[dsx1CurrentSEFSs]]
    color = blue
    y-axis = "#sec/15min"
    units = "sec"
    legend = "The number of Severely Errored Framing Seconds"
[[dsx1CurrentUASs]]
    color = green
    y-axis = "#sec/15min"
    units = "sec"
    legend = "The number of Unavailable Seconds"
[[dsx1CurrentCSSs]]
    color = orange
    y-axis = "#sec/15min"
    units = "sec"
    legend = "The number of Controlled Slip Seconds"
[[dsx1CurrentPCVs]]
    color = green
    y-axis = "#/15min"
    units = "#"
    legend = "The number of Path Coding Violations"
[[dsx1CurrentLESs]]
    color = green
    y-axis = "#sec/15min"
    units = "sec"
    legend = "The number of Line Errored Seconds"
[[dsx1CurrentBESs]]
    color = dark-green
    y-axis = "#sec/15min"
    units = "sec"
    legend = "The number of Bursty Errored Seconds"
[[dsx1CurrentDMs]]
    color = blue
    y-axis = "#min/15min"
    units = "min"
    legend = "The number of Degraded Minutes"
[[dsx1CurrentLCVs]]
    color = blue
    y-axis = "#/15min"
    units = "#"
    legend = "The number of Line Code Violations"
